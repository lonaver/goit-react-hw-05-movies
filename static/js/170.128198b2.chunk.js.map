{"version":3,"file":"static/js/170.128198b2.chunk.js","mappings":"8MAEMA,EAAU,mCAIT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GAA2BC,EAA3B,+BAAqC,cAAeC,EAApD,+BAAgE,GAAhE,SACkBC,EAAAA,EAAAA,IAAA,uCACWF,EADX,oBAC8BF,GAD9B,OACwCG,GAC7D,CACEE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOARH,cACCC,EADD,yBAYEA,GAZF,mE,gLCHMC,EAAYC,EAAAA,GAAAA,IAAH,oFAMTC,EAAcD,EAAAA,GAAAA,IAAH,uJAQXE,EAAYF,EAAAA,GAAAA,GAAH,qDAKTG,EAAqBH,EAAAA,GAAAA,IAAH,qEAKlBI,EAAWJ,EAAAA,GAAAA,IAAH,4IAORK,EAAgBL,EAAAA,GAAAA,GAAH,0GAQbM,EAAiBN,EAAAA,GAAAA,GAAH,iGAKdO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,8R,SCqCvB,EArEqB,WAAO,IAAD,MACzB,GAAuCS,EAAAA,EAAAA,UAAS,IAAhD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,GACvCC,GAAsBC,EAAAA,EAAAA,QAAOL,GAE3BM,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gHAEA/B,EAAAA,EAAAA,GAAY,UAAD,OAAW4B,IAFtB,OAEjBI,EAFiB,OAIjBC,EAAYD,EAASE,KAC3Bb,EAAeY,GACfE,QAAQC,IAAI,MAAOH,GANI,gDAQvBE,QAAQC,IAAR,MARuB,qGAAH,qDAaxBL,GACD,GAAE,CAACH,KAKF,4BACE,SAACX,EAAD,CAAYoB,GAAIX,EAAoBY,QAApC,sBACA,UAAC7B,EAAD,YACE,UAACE,EAAD,YACE,SAACG,EAAD,WACE,gBACEyB,IAAI,QACJC,IAAKpB,EAAaqB,YAClBC,MAAM,MACNC,OAAO,WAGX,UAAC9B,EAAD,YACE,SAACD,EAAD,UAAYQ,EAAawB,SACzB,uBAAIxB,EAAayB,YACjB,4BACE,oCACA,SAAC9B,EAAD,oBACGK,EAAa0B,cADhB,aACG,EAAqBC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACxB,wBAAcA,GAALD,EADe,gBAOlC,oDACA,UAAChC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMqB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C","sources":["FetchMovies.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = '228d8284295592923c769d834cdf0ca4';\n//export const per_page = 12;\n// axios.defaults.baseURL('');\n\nexport async function FetchMovies(request = 'movie/76341', searchStr = '') {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/${request}?api_key=${KEY_API}${searchStr}`,\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMjhkODI4NDI5NTU5MjkyM2M3NjlkODM0Y2RmMGNhNCIsInN1YiI6IjY0NWNkMDkyMTU2Y2M3MDE1ZTc5MGM1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0OWXQGTi84goa4jFlG05fCrd_XVJjVqvLGWlyS6LTWg',\n      },\n    }\n  );\n  return response;\n}\n\n// `https://api.themoviedb.org/3/authentication/?key=`,\n// const options = {\n//   method: 'GET',\n//   headers: {\n//     accept: 'application/json',\n//     Authorization:\n//       'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMjhkODI4NDI5NTU5MjkyM2M3NjlkODM0Y2RmMGNhNCIsInN1YiI6IjY0NWNkMDkyMTU2Y2M3MDE1ZTc5MGM1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0OWXQGTi84goa4jFlG05fCrd_XVJjVqvLGWlyS6LTWg',\n//   },\n// };\n\n// fetch('https://api.themoviedb.org/3/authentication', options)\n//   .then(response => response.json())\n//   .then(response => console.log(response))\n//   .catch(err => console.error(err));\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const WrapperMain = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const MainTitle = styled.h1`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const WrapperDetailsText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ThumbImg = styled.div`\n  width: 360;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const WrapperGenres = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListAdditional = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 4px 8px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 400;\n  color: black;\n  background-color: beige;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { useEffect, useState, Suspense, useRef } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport { FetchMovies } from '../../FetchMovies';\n\nimport {\n  Container,\n  WrapperMain,\n  WrapperDetailsText,\n  ThumbImg,\n  WrapperGenres,\n  ListAdditional,\n  StyledLink,\n  MainTitle,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetail] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '';\n  const backLinkLocationRef = useRef(backLinkHref);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const ApiFetshListMovies = async () => {\n      try {\n        const OneMovie = await FetchMovies(`/movie/${movieId}`);\n\n        const dataMovie = OneMovie.data;\n        setMovieDetail(dataMovie);\n        console.log('One', dataMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        //homepage   original_title backdrop_path\n      }\n    };\n    ApiFetshListMovies();\n  }, [movieId]);\n  // const KEY_API = '228d8284295592923c769d834cdf0ca4';\n  // const pathCard = `https://api.themoviedb.org/3?api_key=${KEY_API}/movie/${movieId}${movieDetails.poster_path}`;\n  // console.log('image', pathCard);\n  return (\n    <div>\n      <StyledLink to={backLinkLocationRef.current}>Go back</StyledLink>\n      <Container>\n        <WrapperMain>\n          <ThumbImg>\n            <img\n              alt=\"movie\"\n              src={movieDetails.poster_path}\n              width=\"160\"\n              height=\"220\"\n            ></img>\n          </ThumbImg>\n          <WrapperDetailsText>\n            <MainTitle>{movieDetails.title}</MainTitle>\n            <p>{movieDetails.overview}</p>\n            <div>\n              <h2>Genres</h2>\n              <WrapperGenres>\n                {movieDetails.genres?.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </WrapperGenres>\n            </div>\n          </WrapperDetailsText>\n        </WrapperMain>\n        <h2>Additional information</h2>\n        <ListAdditional>\n          <li>\n            <Link to=\"cast\">cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">reviews</Link>\n          </li>\n        </ListAdditional>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY_API","FetchMovies","request","searchStr","axios","method","headers","accept","Authorization","response","Container","styled","WrapperMain","MainTitle","WrapperDetailsText","ThumbImg","WrapperGenres","ListAdditional","StyledLink","Link","useState","movieDetails","setMovieDetail","backLinkHref","useLocation","state","from","backLinkLocationRef","useRef","movieId","useParams","useEffect","ApiFetshListMovies","OneMovie","dataMovie","data","console","log","to","current","alt","src","poster_path","width","height","title","overview","genres","map","id","name","Suspense","fallback"],"sourceRoot":""}