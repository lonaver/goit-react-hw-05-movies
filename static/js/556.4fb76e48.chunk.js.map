{"version":3,"file":"static/js/556.4fb76e48.chunk.js","mappings":"qOAEMA,EAAU,mCACHC,EAAQ,kCAEd,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA2BC,EAA3B,+BAAqC,cAAeC,EAApD,+BAAgE,GAAhE,SACkBC,EAAAA,EAAAA,IAAA,uCACWF,EADX,oBAC8BH,GAD9B,OACwCI,GAC7D,CACEE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOARH,cACCC,EADD,yBAYEA,GAZF,mE,kHCoCP,UArCgB,WACd,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gHAEAf,EAAAA,EAAAA,GAAY,UAAD,OAAWY,EAAX,aAFX,OAEjBI,EAFiB,OAGjBC,GAHiB,OAGAD,EAASE,KAAKC,SACrCR,EAAgBM,GAJO,gDAMvBG,QAAQC,IAAR,MANuB,yDAAH,qDASxBN,GACD,GAAE,CAACH,KAGF,0BACE,wBACGF,EAAaY,OAAS,EACrBZ,EAAaa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAKZ,KAED,wDAKT,C","sources":["FetchMovies.js","components/Reveiws/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = '228d8284295592923c769d834cdf0ca4';\nexport const BASE_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport async function FetchMovies(request = 'movie/76341', searchStr = '') {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/${request}?api_key=${KEY_API}${searchStr}`,\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMjhkODI4NDI5NTU5MjkyM2M3NjlkODM0Y2RmMGNhNCIsInN1YiI6IjY0NWNkMDkyMTU2Y2M3MDE1ZTc5MGM1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0OWXQGTi84goa4jFlG05fCrd_XVJjVqvLGWlyS6LTWg',\n      },\n    }\n  );\n  return response;\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchMovies } from '../../FetchMovies';\n\nconst Reviews = () => {\n  const [movieReveiws, setMovieReveiws] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const ApiFetshListMovies = async () => {\n      try {\n        const OneMovie = await FetchMovies(`/movie/${movieId}/reviews`);\n        const dataResult = [...OneMovie.data.results];\n        setMovieReveiws(dataResult);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    ApiFetshListMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReveiws.length > 0 ? (\n          movieReveiws.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don`t have any reviews</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["KEY_API","BASE_URL","FetchMovies","request","searchStr","axios","method","headers","accept","Authorization","response","useState","movieReveiws","setMovieReveiws","movieId","useParams","useEffect","ApiFetshListMovies","OneMovie","dataResult","data","results","console","log","length","map","id","author","content"],"sourceRoot":""}