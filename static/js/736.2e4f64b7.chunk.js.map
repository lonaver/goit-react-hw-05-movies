{"version":3,"file":"static/js/736.2e4f64b7.chunk.js","mappings":"qOAEMA,EAAU,mCACHC,EAAQ,kCAEd,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA2BC,EAA3B,+BAAqC,cAAeC,EAApD,+BAAgE,GAAhE,SACkBC,EAAAA,EAAAA,IAAA,uCACWF,EADX,oBAC8BH,GAD9B,OACwCI,GAC7D,CACEE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOARH,cACCC,EADD,yBAYEA,GAZF,mE,qKCHMC,EAAeC,EAAAA,GAAAA,GAAH,8HASZC,EAAWD,EAAAA,GAAAA,IAAH,8I,SCmCrB,EAzCa,WACX,OAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gHAEAlB,EAAAA,EAAAA,GAAY,UAAD,OAAWe,EAAX,aAFX,OAEjBI,EAFiB,OAGjBC,GAHiB,OAGFD,EAASE,KAAKC,MACnCR,EAAgBM,GAJO,gDAMvBG,QAAQC,IAAR,MANuB,yDAAH,qDASxBN,GACD,GAAE,CAACH,KAGF,0BACE,SAACN,EAAD,UACGI,EAAaY,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACpC,OACE,0BACGA,GACC,SAACjB,EAAD,WACE,gBAAKkB,IAAK9B,EAAAA,EAAW6B,EAAcE,IAAKH,OAG1C,SAAChB,EAAD,WACE,6CAGJ,uBAAIgB,MAVGD,EAaZ,OAIR,C","sources":["FetchMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY_API = '228d8284295592923c769d834cdf0ca4';\nexport const BASE_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport async function FetchMovies(request = 'movie/76341', searchStr = '') {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/${request}?api_key=${KEY_API}${searchStr}`,\n    {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMjhkODI4NDI5NTU5MjkyM2M3NjlkODM0Y2RmMGNhNCIsInN1YiI6IjY0NWNkMDkyMTU2Y2M3MDE1ZTc5MGM1YyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0OWXQGTi84goa4jFlG05fCrd_XVJjVqvLGWlyS6LTWg',\n      },\n    }\n  );\n  return response;\n}\n","import styled from 'styled-components';\n\nexport const WrapperCasts = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ThumbImg = styled.div`\n  width: 160px;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchMovies, BASE_URL } from '../../FetchMovies';\nimport { ThumbImg, WrapperCasts } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const ApiFetshListMovies = async () => {\n      try {\n        const OneMovie = await FetchMovies(`/movie/${movieId}/credits`);\n        const dataCast = [...OneMovie.data.cast];\n        setMovieCredits(dataCast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    ApiFetshListMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <WrapperCasts>\n        {movieCredits.map(({ credit_id, name, profile_path }) => {\n          return (\n            <li key={credit_id}>\n              {profile_path ? (\n                <ThumbImg>\n                  <img src={BASE_URL + profile_path} alt={name}></img>\n                </ThumbImg>\n              ) : (\n                <ThumbImg>\n                  <span>No image...</span>\n                </ThumbImg>\n              )}\n              <p>{name}</p>\n            </li>\n          );\n        })}\n      </WrapperCasts>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["KEY_API","BASE_URL","FetchMovies","request","searchStr","axios","method","headers","accept","Authorization","response","WrapperCasts","styled","ThumbImg","useState","movieCredits","setMovieCredits","movieId","useParams","useEffect","ApiFetshListMovies","OneMovie","dataCast","data","cast","console","log","map","credit_id","name","profile_path","src","alt"],"sourceRoot":""}